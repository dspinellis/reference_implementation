---
 - hosts: localhost
   gather_facts: false
   become: yes

   tasks:
    # Create epidose group to allow passwordless sudo for all commands
    # This is necessary to run epidose as root
    - name: create 'epidose' group
      tags: production, development
      group:
        name: epidose
        state: present

    - name: allow 'epidose' group to have passwordless sudo
      tags: production, development
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%epidose'
        line: '%epidose ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
  
    - name: add sudo user to 'epidose' group
      tags: production, development
      user:
        name: epidose
        groups: epidose
        append: yes
        state: present
        createhome: yes

    - name: create .ssh directory
      tags: production, development
      file:
        path: /home/epidose/.ssh
        state: directory
        owner: epidose
        group: epidose
        mode: 0700

    - name: copy authorized_keys to epidose user
      tags: production, development
      copy:
       src: /home/pi/.ssh/authorized_keys
       dest: /home/epidose/.ssh/authorized_keys
       owner: epidose
       group: epidose
       mode: 0700

    - name: install libraries and packages
      tags: production, development
      become: yes
      become_user: root
      apt:
        name: ['git', 'libbluetooth-dev', 'libglib2.0-dev', 'python3-dev', 'python3-setuptools', 'shellcheck', 'sqlite3', 'virtualenv', 'dh-virtualenv', 'debhelper', 'supervisor']

    - name: setup production environment
      tags: production
      become: yes
      become_user: epidose
      shell: |
       cd /home/epidose
       git clone https://github.com/eellak/epidose
       cd epidose      
       virtualenv venv -p /usr/bin/python3
       . venv/bin/activate
       pip3 install -e ".[dev,test,deploy]"
       make package
       sudo make install
      register: setup_env_output

    - name: setup development environment
      tags: development
      become: yes
      become_user: epidose
      shell: |
       cd /home/epidose
       git clone https://github.com/eellak/epidose
       cd epidose    
       virtualenv venv -p /usr/bin/python3
       . venv/bin/activate
       pip3 install -e ".[dev,test,deploy]"
       pre-commit install
       git remote add dp3t https://github.com/DP-3T/reference_implementation.git
       git fetch
       make package
       sudo make install
      register: setup_env_output

    - debug:
         msg: "{{ setup_env_output.stdout_lines|list }}"
      tags: production, development

    - name: set git name and email
      tags: production, development
      become: yes
      become_user: root
      shell: |
       git config --system user.name "epidose"
       git config --system user.email "epidose@device.com"

    - name: installl fake-hwclock to /sbin
      tags: production, development
      become: yes
      become_user: root
      shell: cp /home/epidose/epidose/epidose/device/setup/fake-hwclock /sbin

    # The configurations below are necessary to allow wireless roaming
    - name: enable network roaming
      tags: production, development
      become: yes
      become_user: root
      shell: |
       cat > /etc/network/interfaces.d/wlan0 << EOF
       # The wireless network interface
       allow-hotplug wlan0
       iface wlan0 inet manual
       wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
       EOF

    # Setup Eduroam network configurations
    - name: setup Eduroam
      tags: production, development
      become: yes
      become_user: root
      blockinfile: |
        dest=/etc/wpa_supplicant/wpa_supplicant.conf backup=yes
        content='network={
                    ssid="eduroam"
                    scan_ssid=1
                    key_mgmt=WPA-EAP
                    eap=PEAP
                    identity="epidose"
                    password="{{ eduroam_network_psk }}"
                    phase1="peaplabel=0"
                    phase2="auth=MSCHAPV2" }'

    - name: enable SPIO
      tags: production, development
      become: yes
      become_user: root
      replace:
        path: /boot/config.txt
        regexp: '#dtparam=spi=on'
        replace: 'dtparam=spi=on'

    - name: disable wlan0 on reboot
      tags: production, development
      become: yes
      become_user: root
      lineinfile: dest=/etc/rc.local
        line="ip link set wlan0 down"
        insertbefore="exit 0"        

    # Delete pi user
    - name: remove pi user
      tags: delete
      become: yes
      become_user: root
      user:
        name: pi
        state: absent
        remove: yes
        force: yes
