---
 - hosts: localhost
   gather_facts: false
   become: yes

   tasks:
    - name: install libraries and packages
      become: yes
      become_user: root
      apt:
        name: ['libbluetooth-dev', 'libglib2.0-dev', 'python3-dev',
        'python3-setuptools', 'shellcheck', 'sqlite3', 'virtualenv',
        'dh-virtualenv', 'debhelper', 'supervisor', 'nginx',
        'certbot', 'python3-certbot-nginx']

    - name: install python modules
      become: yes
      become_user: root
      shell: |
        cd ../../
        sed -i 's/armhf/amd64/g' Makefile
        virtualenv venv -p /usr/bin/python3
        . venv/bin/activate
        pip3 install -e ".[dev,test,deploy]"
        make package
        service supervisor start
        make install
      register: modules_installation

    - debug:
         msg: "{{ modules_installation.stdout_lines|list }}"

    - name: start ha-server with gunicorn
      become: yes
      become_user: root
      shell: |
        ../../venv/bin/gunicorn ha_server:app \
        --daemon \
        --pid=/run/ha_server.pid \
        --access-logfile=/var/log/ha_server_access_log \
        --disable-redirect-access-to-syslog \
        --error-logfile=/var/log/ha_server_error_log \
        --capture-output \
        --bind=0.0.0.0:5010
      register: gunicorn_debug

    - debug:
         msg: "{{ gunicorn_debug.stdout_lines|list }}"

    - name: create nginx config file for ha-server
      become: yes
      become_user: root
      file:
        path: /etc/nginx/conf.d/{{ server_name }}.conf
        state: touch
        owner: root
        group: root
        mode: 0644

    - name: add nginx configurations
      tags: nginx
      become: yes
      become_user: root
      blockinfile: |
        dest=/etc/nginx/conf.d/{{ server_name }}.conf
        content='server {
                    listen 80;
                    server_name {{ server_name }};
                    root /home/epidose/epidose/epidose/back_end;
                    access_log /var/log/nginx_access.log;
                    error_log /var/log/nginx_error.log;

                    if ($scheme != "https") { 
                      return 301 https://{{ server_name }}$request_uri;
                    }

                    location / {
                      proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                      proxy_set_header Host $http_host;
                      proxy_redirect off;
                      proxy_pass http://185.70.186.134:5010;
                    }
                  }'

    - name: enable nginx server
      become: yes
      become_user: root
      systemd:
        name: nginx
        enabled: yes

    - name: restart nginx server
      become: yes
      become_user: root
      systemd:
        name: nginx
        state: restarted

    - name: obtain certificate
      become: yes
      become_user: root
      shell: certbot --nginx --non-interactive -d {{ server_name }} --agree-tos --email stefanos1316@gmail.com --email dds@aueb.gr

    - name: add cron entry to renew cert every 12 hours
      become: yes
      become_user: root
      cron:
        name: update cert every 12 hours
        minutes: "1, 31"
        job: "/usr/bin/certbot renew --quiet && service nginx reload"
